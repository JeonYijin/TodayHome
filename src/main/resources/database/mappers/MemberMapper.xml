<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.th.th1.member.MemberDAO">
	
	<insert id="setMemberInsert" parameterType="MemberVO">
		INSERT INTO member (memberNum, id, pw, nickname, enabled)
		VALUES (0, #{id}, #{pw}, #{nickname}, 1);
	</insert>
	
	<delete id="setMemberDelete" parameterType="MemberVO">
		delete from member where memberNum = #{memberNum}
	</delete>
	
	<select id="getNicknameCheck" parameterType="MemberVO" resultType="Long">
		select count(*) from member where nickname = #{nickname}
	</select>
	

	<!-- 회원정보 수정 - 닉네임 수정 -->
	<update id="setMemberUpdate" parameterType="MemberVO">
		update member set nickname = #{nickname} where memberNum=#{memberNum}
	</update>
	
	<!-- 마이페이지 알림설정 -->
	<insert id="setNotiInsert" parameterType="NotiVO">
		insert into noti values(#{noti_email}, #{memberNum})
	</insert>
	
	<update id="setNotiUpdate" parameterType="NotiVO">
		update noti set noti_email = #{noti_email} where memberNum = #{memberNum}
	</update>
	
	<select id="getNoti" parameterType="NotiVO" resultType="NotiVO">
		select * from noti where memberNum = #{memberNum}
	</select>
	<!-- 메세지 -->
	<insert id="setNotiMInsert" parameterType="NotiMVO">
		insert into notim values(#{noti_msg}, #{memberNum})
	</insert>
	
	<update id="setNotiMUpdate" parameterType="NotiMVO">
		update notim set noti_msg = #{noti_msg} where memberNum = #{memberNum}
	</update>
	
	<select id="getNotiM" parameterType="NotiMVO" resultType="NotiMVO">
		select * from notim where memberNum = #{memberNum}
	</select>
	
	
	

	<!-- 아이디 조회 -->
	<select id="getSelectId" parameterType="MemberVO" resultType="MemberVO">
		select * from member where id = #{id}
	</select>
	
	<!-- 닉네임 조회 -->
	<select id="getSelectNickname" parameterType="MemberVO" resultType="MemberVO">
		select * from member where nickname = #{nickname}
	</select>
	
	
	<!-- role 세팅 -->
	<insert id="setMemberRoleInsert" parameterType="java.util.Map">
		insert into member_role(id, num) values(#{id}, #{num})
	</insert>
  
  	<!-- 로그인 -->
	<select id="getLogin" parameterType="java.lang.String" resultMap="getLoginResult">
		select  M.*, R.* from
			member M inner join member_role MR
			on M.id = MR.id
			inner join role R
			on MR.num = R.num
			where M.id = #{username}

	</select>
	<resultMap type="MemberVO" id="getLoginResult">
		<id column="memberNum" property="memberNum"/>
		<result column="id" property="id"/>
		<result column="pw" property="pw"/>
		<result column="nickname" property="nickname"/>
		<result column="enabled" property="enabled"/>
		<collection property="roles" javaType="List" ofType="RoleVO">
			<result column="num" property="num"/>
  			<result column="roleName" property="roleName"/>
		</collection>
	</resultMap>
	
	
	<!-- 마이페이지용 -->
	
	<!-- 내가 쓴 사진 게시글 가져오기 -->
	<select id="getMyPicture" parameterType="PictureVO" resultMap="getMyPic">
		select P.*, PF.* from
		picture P inner join picturefile PF
		on P.post_id = PF.post_id
		where P.memberNum = #{memberNum};
	</select>
	<resultMap type="PictureVO" id="getMyPic">
  		<id column="post_id" property="post_id"/>
  		<result column="memberNum" property="memberNum"/>
  		<result column="post_date" property="post_date"/>
  		<result column="pyeongsu" property="pyeongsu"/>
  		<result column="housetype" property="housetype"/>
  		<result column="style" property="style"/>
  		<result column="area" property="area"/>
  		<result column="post_text" property="post_text"/>
  		<result column="hit" property="hit"/>
  		<collection property="pictureFileVO" javaType="List" ofType="PictureFileVO">
  			<id column="picFilenum" property="picFilenum"/>
  			<result column="picFilename" property="picFilename"/>
  			<result column="picOriname" property="picOriname"/>
  			<result column="post_id" property="post_id"/>
  		</collection>
  		
  	</resultMap>
	
	<!-- 내가 쓴 사진 개수 -->
	<select id="getMyPicCount" parameterType="PictureVO" resultType="Long">
		select count(*) from picture where memberNum = #{memberNum};
	</select>
	
	
	<!-- 내가 좋아요한 사진 게시글 -->
	<select id="getMyHeartPic" parameterType="FeelingVO" resultMap="getMyHeart">
		select P.post_id, PF.*, F.* from
		picture P inner join picturefile PF
		on P.post_id = PF.post_id
		right join feeling F
		on P.post_id = F.post_id
		where F.memberNum = #{memberNum};
	</select>
	<resultMap type="PictureVO" id="getMyHeart">
  		<id column="post_id" property="post_id"/>
  		<result column="memberNum" property="memberNum"/>
  		<result column="post_date" property="post_date"/>
  		
  		<collection property="feelingVO" javaType="List" ofType="FeelingVO">
  			<id column="heart" property="heart"/>
  			<result column="post_id" property="post_id"/>
  			<result column="memberNum" property="memberNum"/>
  		</collection>
  		<collection property="pictureFileVO" javaType="List" ofType="PictureFileVO">
  			<id column="picFilenum" property="picFilenum"/>
  			<result column="picFilename" property="picFilename"/>
  			<result column="picOriname" property="picOriname"/>
  			<result column="post_id" property="post_id"/>
  		</collection>
	</resultMap>
  
  	<!-- 내가 좋아요한 사진 개수 -->
  	<select id="getMyHeartCount" parameterType="FeelingVO" resultType="Long">
  		select count(*) from feeling where memberNum = #{memberNum};
  	</select>


	
  	<!-- 내가 스크랩한 사진 게시글 -->
  	<select id="getMyScrapPic" parameterType="ScrapingVO" resultMap="getMyScrap">
  		select P.post_id, PF.*, S.* from
		picture P inner join picturefile PF
		on P.post_id = PF.post_id
		right join scraping S
		on P.post_id = S.post_id
		where S.memberNum = #{memberNum};
  	</select>
  	<resultMap type="PictureVO" id="getMyScrap">
  		<id column="post_id" property="post_id"/>
  		<result column="memberNum" property="memberNum"/>
  		<result column="post_date" property="post_date"/>
  		
  		<collection property="scrapingVO" javaType="List" ofType="ScrapingVO">
  			<id column="scrap" property="scrap"/>
  			<result column="post_id" property="post_id"/>
  			<result column="memberNum" property="memberNum"/>
  		</collection>
  		<collection property="pictureFileVO" javaType="List" ofType="PictureFileVO">
  			<id column="picFilenum" property="picFilenum"/>
  			<result column="picFilename" property="picFilename"/>
  			<result column="picOriname" property="picOriname"/>
  			<result column="post_id" property="post_id"/>
  		</collection>
  	</resultMap>
  	
  	<!-- 내가 스크랩한 사진 개수 -->
  	<select id="getMyScrapCount" parameterType="ScrapingVO" resultType="Long">
  		select count(*) from scraping where memberNum = #{memberNum};
  	</select>
  	
  	<!-- 내가 쓴 집들이 게시글 개수 -->
  	
  	<select id="getHListCount" parameterType="String" resultType="Long">
  		select count(*) from housewarming where house_userId = #{house_userId}
  	</select>
  	
	<!-- 마이페이지에서 접근할 때 쓸 query -->
   <select id="getHListForMypage" parameterType="String" resultType="HouseWarmingVO">
      SELECT * FROM HOUSEWARMING
      WHERE HOUSE_userId=#{house_userId}
   </select>
  <!-- 집들이 좋아요 개수 -->	
  <select id="getHzoaCount" parameterType="String" resultType="Long">
  	select count(*) from house_zoayo where zoayo_id = #{zoayo_id}
  </select>	
  <!-- 집들이 스크랩 개수 -->
  <select id="getHscrCount" parameterType="String" resultType="Long">
  	select count(*) from house_scrap where scrap_id = #{scrap_id}
  </select>
  
  <!-- 집들이 좋아요 누른 게시글 -->
  <select id="getHzoaPost" parameterType="String" resultType="HouseWarmingVO">
  	select * from house_zoayo where zoayo_id = #{zoayo_id}
  </select>
  <!-- 집들이 스크랩한 게시글 -->
  <select id="getHscrPost" parameterType="String" resultType="HouseWarmingVO" >
  	select * from house_scrap where scrap_id = #{scrap_id}
  </select>
  
  </mapper>